{"version":3,"file":"static/js/596.2b0a4ea2.chunk.js","mappings":"8MAgBA,EAbqB,WACjB,OACIA,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,QAAS,QAASC,OAAQ,SAAUC,IAAKC,EAAKC,IAAI,WAC/DT,EAAAA,EAAAA,MAAA,KAAGC,UAAU,UAASC,SAAA,CAAC,+CACoBC,EAAAA,EAAAA,KAAA,SAAM,6CAM5D,C,8MCGA,EAbkB,WACd,OACIH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKI,IAAKG,EAAUD,IAAI,cACxBT,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAAC,0BACRC,EAAAA,EAAAA,KAAA,SAAK,kBAG/BA,EAAAA,EAAAA,KAAA,OAAKI,IAAKI,EAAcF,IAAI,oBAGxC,E,gFCLaG,EAAa,SAACC,GAEvB,IAAAC,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAAoCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA4BT,EAAAA,EAAAA,UAASU,KAAKC,MAA0B,IAApBD,KAAKE,OAAO,EAAG,KAAUC,GAAAX,EAAAA,EAAAA,GAAAO,EAAA,GAAlEK,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAkChB,EAAAA,EAAAA,WAAS,GAAMiB,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAG9BG,GAAmDC,EAAAA,EAAAA,KAA5CC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAYJ,EAAZI,aAAcC,EAAUL,EAAVK,YAGrCC,EAAAA,EAAAA,YAAU,WACNC,EAAUb,GAAQ,EACtB,GAAE,IAGF,IAAMc,EAAmB,SAACC,GACtB,IAAIC,GAAQ,EACTD,EAAQE,OAAS,IAChBD,GAAQ,GAEZ1B,GAAY,SAAAD,GAAQ,SAAA6B,QAAAC,EAAAA,EAAAA,GAAQ9B,IAAQ8B,EAAAA,EAAAA,GAAKJ,GAAO,IAChDrB,GAAc,SAAAD,GAAU,OAAI,CAAK,IACjCQ,GAAU,SAAAD,GAAM,OAAIA,EAASJ,KAAKC,MAA0B,IAApBD,KAAKE,OAAO,EAAG,GAAS,IAChEO,EAAaW,EACjB,EAGMH,EAAY,SAACb,EAAQP,GACvBC,GAAeD,GACfiB,EAAaV,GACRoB,KAAKN,GACLM,KAAKT,GACLS,KAAK1B,GAAeD,GAC7B,EAGM4B,GAAWC,EAAAA,EAAAA,QAAO,IAIlBC,EAAc,SAACC,GACjBH,EAASI,QAAQC,SAAQ,SAAAC,GAAI,OAAIA,EAAKC,UAAUC,OAAO,wBAAwB,IAC/ER,EAASI,QAAQD,GAAII,UAAUE,IAAI,yBACnCT,EAASI,QAAQD,GAAIO,OACzB,EA+DA,OACI5D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,CA3DR,WACnB,IAAM2D,EAAQ3C,EAAS4C,KAAI,SAACN,EAAMO,GAC9B,OACI5D,EAAAA,EAAAA,KAAC6D,EAAAA,EAAa,CAAeC,QAAS,IAAKC,WAAW,eAAchE,UAC5DC,EAAAA,EAAAA,KAAA,MACIgE,IAAK,SAAAC,GAAE,OAAIlB,EAASI,QAAQS,GAAKK,CAAE,EACnCC,SAAU,EACVpE,UAAS,eAETqE,UAAW,SAACC,GACM,MAAVA,EAAEC,KAAyB,UAAVD,EAAEC,KACnBpB,EAAYW,EAEpB,EACAU,QAAS,WAAO5D,EAAM6D,eAAelB,EAAKH,IAAMD,EAAYW,EAAE,EAAE7D,UAC5DF,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,GAAE,WAAA7B,OAAaS,EAAKH,IAAKnD,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKI,IAAKiD,EAAKqB,UAAWpE,IAAK+C,EAAKsB,SACpC3E,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,SACxBsD,EAAKsB,MAAMhC,OAAS,GAAKU,EAAKsB,MAAMC,MAAM,EAAG,IAAM,MAAQvB,EAAKsB,SAErE3E,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAgBG,MAAO,CAAC4E,QAAS,QAAQ9E,SACnDsD,EAAKyB,YAAc,EAAI,gBAAkBzB,EAAKyB,WAAY,WAblEzB,EAAKH,KALFG,EAAKH,GA2BjC,IAEM6B,EAAe5C,GAAQnC,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAACgF,EAAAA,EAAY,MAAY,KACrDC,EAAU/C,GAAWnB,EAAS4B,OAAS,GACzC3C,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACkF,EAAAA,EAAO,MAER,KAGN,OACIrF,EAAAA,EAAAA,MAAAsF,EAAAA,SAAA,CAAApF,SAAA,EAEIF,EAAAA,EAAAA,MAAA,MAAII,MAAO,CAACmF,SAAU,YAAatF,UAAU,eAAcC,SAAA,CACtDgF,GACD/E,EAAAA,EAAAA,KAACqF,EAAAA,EAAe,CAACC,UAAW,KAAKvF,SAC7B2D,QAIR1D,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAAUG,MAAO,CAACsF,MAAO,QAASpF,OAAQ,QAASiF,SAAU,WAAYI,KAAM,MAAOC,UAAW,mBAAoBC,OAAQ,SAAS3F,SACjJkF,MAKhB,CAISU,IACD3F,EAAAA,EAAAA,KAAA,UAAS4F,SAAUzE,EAAYlB,MAAO,CAAC,QAAW6B,EAAY,OAAS,QAAS,WAAcI,EAAU,SAAU,WAAYoC,QAAS,kBAAM/B,EAAUb,EAAO,EAAE5B,UAAU,mCAAkCC,UACxMC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,SAAC,kBAKvC,E,UCrGA,EAtBmB,WAEf,IAAAY,GAAgCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzBkF,GAAFhF,EAAA,GAASA,EAAA,IAK5B,OACIhB,EAAAA,EAAAA,MAAAsF,EAAAA,SAAA,CAAApF,SAAA,EACIF,EAAAA,EAAAA,MAACiG,EAAAA,EAAM,CAAA/F,SAAA,EACHC,EAAAA,EAAAA,KAAA,QACI+F,KAAK,cACLC,QAAQ,wBAEZhG,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAEXC,EAAAA,EAAAA,KAACiG,EAAS,KACVjG,EAAAA,EAAAA,KAACS,EAAU,CAAC8D,eAbG,SAACrB,GACtB2C,EAAQ3C,EACV,MAeJ,C,mGCgFA,EAtGyB,WAErB,IAAAgD,ECHmB,WACnB,IAAAvF,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCuB,EAAOrB,EAAA,GAAEsF,EAAUtF,EAAA,GAC1BI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCkB,EAAKjB,EAAA,GAAEkF,EAAQlF,EAAA,GAEhBmF,GAAUC,EAAAA,EAAAA,aAAW,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,EAAOC,GAAG,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAV,EAAAA,EAAAA,KAAAW,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEjB,OAFmBV,EAAMK,EAAAvE,OAAA,QAAA6E,IAAAN,EAAA,GAAAA,EAAA,GAAG,MAAOJ,EAAII,EAAAvE,OAAA,QAAA6E,IAAAN,EAAA,GAAAA,EAAA,GAAG,KAAMH,EAAOG,EAAAvE,OAAA,QAAA6E,IAAAN,EAAA,GAAAA,EAAA,GAAG,CAAC,eAAgB,oBAE5Ff,GAAW,GAAMkB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGUE,MAAMb,EAAK,CAACC,OAAAA,EAAQC,KAAAA,EAAMC,QAAAA,IAAU,KAAD,EAA5C,IAARC,EAAQK,EAAAK,MAEAC,GAAG,CAADN,EAAAE,KAAA,eACN,IAAIK,MAAM,mBAADhF,OAAoBgE,EAAG,cAAAhE,OAAaoE,EAASa,SAAU,KAAD,UAAAR,EAAAE,KAAA,GAGtDP,EAASc,OAAO,KAAD,GAEhB,OAFZb,EAAII,EAAAK,KAEVvB,GAAW,GAAOkB,EAAAU,OAAA,SACXd,GAAI,QAGS,MAHTI,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAEXlB,GAAW,GACXC,EAASiB,EAAAW,GAAEC,SAASZ,EAAAW,GAAA,yBAAAX,EAAAa,OAAA,GAAAvB,EAAA,mBAG3B,gBAAAwB,GAAA,OAAA5B,EAAA6B,MAAA,KAAAjB,UAAA,EApB0B,GAoBxB,IAIH,MAAO,CAACjF,QAAAA,EAASmE,QAAAA,EAASlE,MAAAA,EAAOE,YAFdiE,EAAAA,EAAAA,cAAY,kBAAMF,EAAS,KAAK,GAAE,IAGzD,CD1BmDiC,GAAxCnG,EAAOgE,EAAPhE,QAASmE,EAAOH,EAAPG,QAASlE,EAAK+D,EAAL/D,MAAOE,EAAU6D,EAAV7D,WAG1BiG,EAAS,mCACTC,EAAU,2CAEVC,EAAclH,KAAKC,MAA0B,IAApBD,KAAKE,OAAO,EAAG,IAGxCiH,EAAmB,eAAAlC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOZ,GAAI,IAAA2C,EAAA,OAAAjC,EAAAA,EAAAA,KAAAW,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACjBlB,EAAQ,GAADzD,OAAI2F,EAAO,qBAAA3F,OAAoBmD,EAAI,YAAAnD,OAAW0F,IAAS,OAAvE,OAAHI,EAAGrB,EAAAK,KAAAL,EAAAU,OAAA,SACFY,EAAoBD,IAAI,wBAAArB,EAAAa,OAAA,GAAAvB,EAAA,KAClC,gBAHwBwB,GAAA,OAAA5B,EAAA6B,MAAA,KAAAjB,UAAA,KAMnByB,EAAgB,eAAAC,GAAArC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAoC,IAAA,IAAApH,EAAAgH,EAAAK,EAAA5B,UAAA,OAAAV,EAAAA,EAAAA,KAAAW,MAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OAA0B,OAAnB7F,EAAMqH,EAAApG,OAAA,QAAA6E,IAAAuB,EAAA,GAAAA,EAAA,GAAGP,EAAUQ,EAAAzB,KAAA,EAC7BlB,EAAQ,GAADzD,OAAI2F,EAAO,gBAAA3F,OAX1B,UAW8C,YAAAA,OAAWlB,EAAM,YAAAkB,OAAW0F,IAAS,OAApF,OAAHI,EAAGM,EAAAtB,KAAAsB,EAAAjB,OAAA,SACFW,EAAIzB,KAAKgC,QAAQtF,IAAIuF,IAAuB,wBAAAF,EAAAd,OAAA,GAAAY,EAAA,KACtD,kBAHqB,OAAAD,EAAAT,MAAA,KAAAjB,UAAA,KAKhBgC,EAAY,eAAAC,GAAA5C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA2C,EAAOnG,GAAE,IAAAwF,EAAA,OAAAjC,EAAAA,EAAAA,KAAAW,MAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cAAA+B,EAAA/B,KAAA,EACRlB,EAAQ,GAADzD,OAAI2F,EAAO,gBAAA3F,OAAeM,EAAE,YAAAN,OAAW0F,IAAS,OAAhE,OAAHI,EAAGY,EAAA5B,KAAA4B,EAAAvB,OAAA,SACFY,EAAoBD,IAAI,wBAAAY,EAAApB,OAAA,GAAAmB,EAAA,KAClC,gBAHiBE,GAAA,OAAAH,EAAAhB,MAAA,KAAAjB,UAAA,KAIZqC,EAAQ,eAAAC,GAAAjD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAgD,EAAOxG,GAAE,IAAAwF,EAAA,OAAAjC,EAAAA,EAAAA,KAAAW,MAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,cAAAoC,EAAApC,KAAA,EACJlB,EAAQ,GAADzD,OAAI2F,EAAO,YAAA3F,OAAWM,EAAE,YAAAN,OAAW0F,IAAS,OAA5D,OAAHI,EAAGiB,EAAAjC,KAAAiC,EAAA5B,OAAA,SACF6B,EAAiBlB,EAAIzB,KAAKgC,QAAQ,KAAG,wBAAAU,EAAAzB,OAAA,GAAAwB,EAAA,KAC/C,gBAHaG,GAAA,OAAAJ,EAAArB,MAAA,KAAAjB,UAAA,KAKR/E,EAAY,eAAA0H,GAAAtD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAqD,IAAA,IAAArI,EAAAgH,EAAAsB,EAAA7C,UAAA,OAAAV,EAAAA,EAAAA,KAAAW,MAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,OAA0B,OAAnB7F,EAAMsI,EAAArH,OAAA,QAAA6E,IAAAwC,EAAA,GAAAA,EAAA,GAAGxB,EAAUyB,EAAA1C,KAAA,EACzBlB,EAAQ,GAADzD,OAAI2F,EAAO,iBAAiB,EAAC,YAAA3F,OAAWlB,EAAM,YAAAkB,OAAW0F,IAAS,OAAlF,OAAHI,EAAGuB,EAAAvC,KAAAuC,EAAAlC,OAAA,SACFW,EAAIzB,KAAKgC,QAAQtF,IAAIuG,IAAuB,wBAAAD,EAAA/B,OAAA,GAAA6B,EAAA,KACtD,kBAHiB,OAAAD,EAAA1B,MAAA,KAAAjB,UAAA,KAKZyC,EAAmB,SAACO,GAAY,IAADC,EACvC,MAAO,CACNlH,GAAIiH,EAAOjH,GACXyB,MAAOwF,EAAOxF,MACd0F,YAAaF,EAAOE,aAAe,0BACnCC,UAAWH,EAAOG,UAAS,GAAA1H,OACrBuH,EAAOG,UAAS,OACnB,2CACH5F,UAAWyF,EAAOzF,UAAU6F,KAAO,IAAMJ,EAAOzF,UAAU8F,UAC1DC,UAA+B,QAArBL,EAAAD,EAAOO,YAAY,UAAE,IAAAN,OAAA,EAArBA,EAAuBK,WAAY,QAC7CE,MAAOR,EAAOS,OAAO,GAAGD,MAAK,GAAA/H,OACvBuH,EAAOS,OAAO,GAAGD,MAAK,KACzB,gBAEL,EAEST,EAAyB,SAACxB,GAC5B,MAAO,CACHxF,GAAIwF,EAAIxF,GACRyB,MAAO+D,EAAI/D,MACX0F,YAAa3B,EAAI2B,YACjBQ,OAAQnC,EAAImC,OACZC,YAAapC,EAAIoC,YACjBpG,UAAWgE,EAAIhE,UAAU6F,KAAO,IAAK7B,EAAIhE,UAAU8F,UACnDO,SAAUrC,EAAIsC,KAAK,GAAGpE,IACtBqE,KAAK,6DAADrI,OAA+D8F,EAAI/D,OACvEG,WAAY4D,EAAIkC,OAAO,GAAGD,MAGlC,EAEMhC,EAAsB,SAACD,GACzB,IAAMwC,EAAWxC,EAAIzB,KAAKgC,QAAQ,GAClC,MAAO,CACHlD,KAAMmF,EAASnF,KACfsE,YAAaa,EAASb,YACtB3F,UAAWwG,EAASxG,UAAU6F,KAAO,IAAKW,EAASxG,UAAU8F,UAC7DO,SAAUG,EAASF,KAAK,GAAGpE,IAC3BqE,KAAK,6DAADrI,OAA+DsI,EAASnF,MAC5EoE,OAAQe,EAASf,OAAOzG,MAGhC,EACMwF,EAAyB,SAACR,GAC5B,MAAO,CACHxF,GAAIwF,EAAIxF,GACR6C,KAAM2C,EAAI3C,KACVsE,YAAa3B,EAAI2B,YACjB3F,UAAWgE,EAAIhE,UAAU6F,KAAO,IAAK7B,EAAIhE,UAAU8F,UACnDO,SAAUrC,EAAIsC,KAAK,GAAGpE,IACtBqE,KAAK,6DAADrI,OAA+D8F,EAAI3C,MAG/E,EACH,MAAO,CACN7D,QAAAA,EACAC,MAAAA,EACAE,WAAAA,EACAuG,iBAAAA,EACAO,aAAAA,EACM/G,aAAAA,EACAoH,SAAAA,EACAf,oBAAAA,EAER,C","sources":["components/errorMessage/ErrorMessage.js","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","services/MarvelService.js","hooks/http.hook.js"],"sourcesContent":["import img from './error.jpg'\r\nimport './errorMessage.scss'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <div className='error' >\r\n           <img style={{display: 'block', height: '260px'}} src={img} alt=\"error\" /> \r\n           <p className='error_p'>\r\n           You have lost this battle with the server. <br /> Looks like the database is broken...\r\n           </p>\r\n        </div>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import './ComicsList.scss';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';\r\nimport { Link } from 'react-router-dom'\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\n\r\n\r\n\r\nexport const ComicsList = (props) => {\r\n\r\n    const [charList, setCharList] = useState([]);\r\n    const [loadingNew, setLoadingNew] = useState(false);\r\n    const [offset, setOffset] = useState(Math.floor(Math.random(0, 1) * 250));\r\n    const [charEnded, setCharEnded] = useState(false);\r\n\r\n\r\n    const {loading, error, getAllComics, clearError} = useMarvelService();\r\n\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    },[]);\r\n\r\n\r\n    const onCharListLoaded = (newChar) => {   \r\n        let ended = false;\r\n        if(newChar.length < 8) {\r\n            ended = true\r\n        }\r\n        setCharList(charList => [...charList, ...newChar]);\r\n        setLoadingNew(loadingNew => false);\r\n        setOffset(offset => offset + Math.floor(Math.random(0, 1) * 250));\r\n        setCharEnded(ended)\r\n    };\r\n\r\n\r\n    const onRequest = (offset, loadingNew) => {\r\n        setLoadingNew(!loadingNew);\r\n        getAllComics(offset)\r\n            .then(onCharListLoaded)\r\n            .then(clearError)\r\n            .then(setLoadingNew(!loadingNew))\r\n    };\r\n\r\n\r\n    const itemRefs = useRef([]);\r\n\r\n\r\n\r\n    const focusOnItem = (id) => {\r\n        itemRefs.current.forEach(item => item.classList.remove('comics__item_selected'));\r\n        itemRefs.current[id].classList.add('comics__item_selected');\r\n        itemRefs.current[id].focus();\r\n    };\r\n\r\n\r\n\r\n\r\n    const renderCharList = () => {\r\n        const items = charList.map((item, i) => {\r\n            return (\r\n                <CSSTransition key={item.id} timeout={500} classNames=\"comics__item\">\r\n                        <li\r\n                            ref={el => itemRefs.current[i] = el}\r\n                            tabIndex={0}\r\n                            className={`comics__item`}\r\n                            key={item.id}\r\n                            onKeyDown={(e) => {\r\n                                if (e.key === ' ' || e.key === \"Enter\") {\r\n                                    focusOnItem(i);\r\n                                }\r\n                            }}\r\n                            onClick={() => {props.onCharSelected(item.id);  focusOnItem(i)}}>\r\n                                <Link to={`/comics/${item.id}`}>\r\n                                    <img src={item.thumbnail} alt={item.title} />\r\n                                    <div className=\"comics__name\">\r\n                                        {item.title.length > 30 ? item.title.slice(0, 30) + '...' : item.title}\r\n                                    </div>\r\n                                    <div className=\"comics__price\" style={{fonSize: \"14px\"}}>\r\n                                        {item.pricePrint <= 1 ? 'NOT AVAILABLE' : item.pricePrint +' $'}\r\n                                    </div>\r\n                                </Link>\r\n                            \r\n                            \r\n                        </li> \r\n                </CSSTransition> \r\n            );\r\n        \r\n        });\r\n\r\n        const errorMessage = error ? <div><ErrorMessage /></div> : null;\r\n        const spinner = loading && charList.length < 2 ? (\r\n            <div>\r\n              <Spinner />\r\n            </div>\r\n          ) : null;\r\n\r\n\r\n        return (\r\n            <>\r\n            \r\n                <ul style={{position: 'relative'}} className=\"comics__grid\">\r\n                    {errorMessage}\r\n                    <TransitionGroup component={null}>\r\n                       {items} \r\n                    </TransitionGroup>\r\n                    \r\n                </ul>\r\n                <div className='spinner' style={{width: '100px', height: '100px', position: 'absolute', left: '50%', transform: 'translateX(-50%)', bottom: '-15vh'}} >\r\n                   {spinner} \r\n                </div>\r\n            </>\r\n            \r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"char__list\">\r\n            {renderCharList()}\r\n            <button  disabled={loadingNew} style={{'display': charEnded ? 'none' : 'block', 'visibility': loading ? 'hidden': 'visible'}} onClick={() => onRequest(offset)} className=\"button button__main button__long\">\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n    \r\n}\r\n","import AppBanner from '../appBanner/AppBanner'\r\nimport { ComicsList } from \"../comicsList/ComicsList\";\r\nimport { Helmet } from 'react-helmet';\r\nimport { useState } from 'react';\r\nconst ComicsPage = () => {\r\n\r\n    const [selectedChar, setChar] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n      setChar(id)\r\n    }\r\n    return(\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Marvel comics list\"\r\n                    />\r\n                <title>Comics Page</title>\r\n            </Helmet>\r\n            <AppBanner />\r\n            <ComicsList onCharSelected={onCharSelected}/> \r\n        </>\r\n        \r\n    )\r\n}\r\nexport default ComicsPage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\n\r\nconst useMarvelService = () => {\r\n\r\n    const {loading, request, error, clearError } = useHttp();\r\n\r\n\r\n    const keyApi = '7ff5c59122f6eb6dc8c5f443abf6a04f';\r\n    const apiBase = 'https://gateway.marvel.com:443/v1/public';\r\n    const limit = 'limit=9';\r\n    const baseOffset =  Math.floor(Math.random(0, 1) * 250);\r\n\r\n\r\n    const getByNameCharacters = async (name) => {\r\n        const res = await request(`${apiBase}/characters?name=${name}&apikey=${keyApi}`)\r\n        return _transformCharacter(res)\r\n    }\r\n\r\n\r\n    const getAllCharacters = async (offset = baseOffset) => {\r\n        const res = await request(`${apiBase}/characters?${limit}&offset=${offset}&apikey=${keyApi}`)\r\n        return res.data.results.map(_transformAllCharacter)\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${apiBase}/characters/${id}?apikey=${keyApi}`)\r\n        return _transformCharacter(res)\r\n    }\r\n    const getComic = async (id) => {\r\n        const res = await request(`${apiBase}/comics/${id}?apikey=${keyApi}`)\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = baseOffset) => {\r\n        const res = await request(`${apiBase}/comics?limit=${8}&offset=${offset}&apikey=${keyApi}`)\r\n        return res.data.results.map(_transformgetAllComics)\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n    const _transformgetAllComics = (res) => {\r\n        return {\r\n            id: res.id,\r\n            title: res.title,\r\n            description: res.description,\r\n            format: res.format,\r\n            issueNumber: res.issueNumber,\r\n            thumbnail: res.thumbnail.path + '.'+ res.thumbnail.extension,\r\n            homepage: res.urls[0].url,\r\n            wiki: ` https://www.google.com/search?q=site%3Amarvel.fandom.com+${res.title}`,\r\n            pricePrint: res.prices[0].price\r\n        }\r\n\r\n    }\r\n\r\n    const _transformCharacter = (res) => {\r\n        const currPath = res.data.results[0]\r\n        return {\r\n            name: currPath.name,\r\n            description: currPath.description,\r\n            thumbnail: currPath.thumbnail.path + '.'+ currPath.thumbnail.extension,\r\n            homepage: currPath.urls[0].url,\r\n            wiki: ` https://www.google.com/search?q=site%3Amarvel.fandom.com+${currPath.name}`,\r\n            comics: currPath.comics.items\r\n        }\r\n\r\n    }\r\n    const _transformAllCharacter = (res) => {\r\n        return {\r\n            id: res.id,\r\n            name: res.name,\r\n            description: res.description,\r\n            thumbnail: res.thumbnail.path + '.'+ res.thumbnail.extension,\r\n            homepage: res.urls[0].url,\r\n            wiki: ` https://www.google.com/search?q=site%3Amarvel.fandom.com+${res.name}`\r\n        }\r\n\r\n    }\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tclearError,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n        getAllComics,\r\n        getComic,\r\n        getByNameCharacters\r\n\t};\r\n};\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}"],"names":["_jsxs","className","children","_jsx","style","display","height","src","img","alt","avengers","avengersLogo","ComicsList","props","_useState","useState","_useState2","_slicedToArray","charList","setCharList","_useState3","_useState4","loadingNew","setLoadingNew","_useState5","Math","floor","random","_useState6","offset","setOffset","_useState7","_useState8","charEnded","setCharEnded","_useMarvelService","useMarvelService","loading","error","getAllComics","clearError","useEffect","onRequest","onCharListLoaded","newChar","ended","length","concat","_toConsumableArray","then","itemRefs","useRef","focusOnItem","id","current","forEach","item","classList","remove","add","focus","items","map","i","CSSTransition","timeout","classNames","ref","el","tabIndex","onKeyDown","e","key","onClick","onCharSelected","Link","to","thumbnail","title","slice","fonSize","pricePrint","errorMessage","ErrorMessage","spinner","Spinner","_Fragment","position","TransitionGroup","component","width","left","transform","bottom","renderCharList","disabled","setChar","Helmet","name","content","AppBanner","_useHttp","setLoading","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","undefined","fetch","sent","ok","Error","status","json","abrupt","t0","message","stop","_x","apply","useHttp","keyApi","apiBase","baseOffset","getByNameCharacters","res","_transformCharacter","getAllCharacters","_ref2","_callee2","_args2","_context2","results","_transformAllCharacter","getCharacter","_ref3","_callee3","_context3","_x2","getComic","_ref4","_callee4","_context4","_transformComics","_x3","_ref5","_callee5","_args5","_context5","_transformgetAllComics","comics","_comics$textObjects$","description","pageCount","path","extension","language","textObjects","price","prices","format","issueNumber","homepage","urls","wiki","currPath"],"sourceRoot":""}